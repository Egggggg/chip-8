// the address to store the font at
const FONT_ADDR: usize = 0x50;

// the font is 80 bytes (5 bytes by 16 chars)
const FONT_SIZE: usize = 80;

const FONT: [u8; FONT_SIZE] = [
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80, // F
];

// the address to store scripts at
pub const SCRIPT_ADDR: usize = FONT_ADDR + FONT_SIZE;

/// Loads the font into memory
///
/// # Arguments
///
/// * `memory` - Simulated memory to load the font into
pub fn load_font(memory: &mut [u8; 4096]) {
    for i in 0..FONT_SIZE {
        memory[FONT_ADDR + i] = FONT[i];
    }
}

/// Loads a script into memory
///
/// # Arguments
///
/// * `memory` - Simulated memory to load the script into
/// * `script` - Script to load into memory and then execute
pub fn load_script(memory: &mut [u8; 4096], script: &[u8]) {
    for i in 0..script.len() {
        memory[SCRIPT_ADDR + i] = script[i];
    }
}
